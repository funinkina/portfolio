<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>funinkina&#39;s portfolio</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on funinkina&#39;s portfolio</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Jan 2025 23:05:52 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Explaining Inodes In Linux</title>
      <link>http://localhost:1313/blog/explaining-inodes-in-linux/</link>
      <pubDate>Mon, 27 Jan 2025 23:05:52 +0530</pubDate>
      <guid>http://localhost:1313/blog/explaining-inodes-in-linux/</guid>
      <description>&lt;h2 id=&#34;what-are-inodes&#34;&gt;What are Inodes?&lt;/h2&gt;&#xA;&lt;p&gt;If you are a linux user, you must have encountered some kind &lt;code&gt;Insufficient Permission&lt;/code&gt; or &lt;code&gt;File not found&lt;/code&gt; errors. These errors are usually caused by the filesystem structure of linux. Ever wondered from where Linux reads these properties of a file? Also if you use symlinks (shortcuts if you are coming from windows) to a file, how is it resolved internally? When I was a beginner, I used to think that Linux reads these properties from the file itself. But then where are these properties stored in the file? It turns out, that&amp;rsquo;s not the case. Linux reads these properties from a data structure called &lt;code&gt;Inode&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplifying Package installation on Arch Linux</title>
      <link>http://localhost:1313/blog/simplifying-package-installation-on-arch-linux/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/simplifying-package-installation-on-arch-linux/</guid>
      <description>&lt;p&gt;All of us in the &amp;ldquo;Arch Btw&amp;rdquo; cult use it for one of its main selling points, the repositories. Arch Linux&amp;rsquo;s pragmatic approach to its packages makes it so much easier for users to sync packages without fiddling with multiple repositories and dependency hell, making it a one-stop solution. The Arch User Repository (AUR) is just a cherry on top. Including packages submitted by users makes it even more complete, removing the need for flatpaks or snaps. (Might cause dependency issues, we will discuss this later).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
